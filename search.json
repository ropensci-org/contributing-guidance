[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "rOpenSci Community Contributing Guide",
    "section": "",
    "text": "Cover illustration by Lydia Hill\n\n This work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 3.0 United States License.\nPlease cite this guide as:\nStefanie Butland & Steffi LaZerte. (2020). rOpenSci Community Contributing Guide (Version v0.1.0). Zenodo. http://doi.org/10.5281/zenodo.4000532"
  },
  {
    "objectID": "welcome.html",
    "href": "welcome.html",
    "title": "Welcome",
    "section": "",
    "text": "The purpose of this guide is to welcome you to rOpenSci and help you recognize yourself as a potential contributor. It will help you figure out what you might gain by giving your time, expertise, and experience; match your needs with things that will help rOpenSci’s mission; and connect you with resources to help you along the way.\nrOpenSci creates technical and community infrastructure for open and reproducible research that lowers barriers to working with scientific data in R. Our staff and community actively foster a welcoming environment where users and developers from different backgrounds and skill levels learn, share ideas and innovate together openly through shared norms and software. Participation in all rOpenSci activities is supported by our Code of Conduct.\nWe welcome contributions from individuals of all skill levels and backgrounds, whether they involve code, technical writing, mentoring, localization or other type of contributions. Whether you’re a seasoned coder or new to the field, your input is valued. You don’t need to identify as a developer for making meaningful contributions! Maybe you want to spend 30 minutes sharing your package use case in our public forum or reporting a bug, one hour learning by attending a Community Call, five hours reviewing an R package submitted for open peer review, or maybe you want to make an ongoing commitment to help maintain a package.\nWhat are some benefits of contributing?\n\nConnect with a community who shares your interest in making science more open\nLearn from people outside your domain who use R with challenges similar to yours\nAsk and answer new research questions by getting to know new software tools and allies\nFeel confident and supported in your efforts to write code and develop software\nGain visibility for your open source work\nImprove the software you use or build\nLevel up your R and other technical skills and help others level up theirs\nLevel up your writing skills\nLevel up your mentoring skills\nGet more exposure for your package and for your research\n\nRead rOpenSci & Our Community to learn about our mission, what it means to be part of our community, and to meet some Humans of rOpenSci.\nBrowse What brings you here? to find which “I want to…” statements fit you best and choose your path! To help you recognize yourself, we’ve grouped these into: Discover; Connect; Learn; Build; Help. For each category, we list examples of what those contributions might look like and we link to our resources to help you get started.\nOr jump directly into rOpenSci Resources to find descriptions and links to guide specific contributions.\n\nA huge thank you to everyone who has contributed to this guide so far! Toby Hodges, Julia Stewart Lowndes, Scott Chamberlain, Jeroen Ooms, Karthik Ram, Noam Ross, Maëlle Salmon, Yanina Bellini Saibene) (alphabetical order with community members followed by staff). Please tell us if we forgot to acknowledge your contribution.\nCover illustration by Lydia Hill.\nThis work was supported in part by a NumFOCUS Small Development Grant to rOpenSci.\n\nPlease cite this guide as:\nStefanie Butland & Steffi LaZerte. (2020). rOpenSci Community Contributing Guide (Version v0.1.0). Zenodo. http://doi.org/10.5281/zenodo.4000532"
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  rOpenSci & Our Community",
    "section": "",
    "text": "Our work is driven by our vision and mission.\nrOpenSci fosters a culture that values open and reproducible research using shared data and reusable software.\nWe do this by:\n\nCreating technical infrastructure in the form of carefully vetted, staff- and community-contributed R software tools that lower barriers to working with scientific data sources on the web, and the R-universe to enhance the publication and discovery of research software in R.\nCreating social infrastructure through a welcoming and diverse community, enhanced by mentoring and localization efforts for broader inclusivity and accessibility.\n\nMaking the right data, tools and best practices more discoverable\n\nBuilding capacity of software users and developers and fostering a sense of pride in their work\nPromoting advocacy for a culture of data sharing and reusable software\n\nOur goal is to build confidence and a sense of belonging for people of all backgrounds, particularly those who might not see themselves as software developers (as many scientists may not!). We do this through building trust and establishing shared norms for working openly, leveraging and creating open source software and resources that support open, reproducible science.\n\nEveryone in the community, no matter how accomplished they are in their own specialty, comes with a mind open to learning from, with, and for each other. We learn from others by using their code and documentation, their blogs and tutorials, their talks and webinars. We learn with others online through Twitter, discussion forums and Slack channels, and in person through coding clubs, hacky hours, meetups, workshops and conferences. And we learn for others by writing tutorials and blogs about our own learning processes, or adding or fulfilling feature requests, which we can then contribute back to the community. Julia Stewart Lowndes in “Open Software Means Kinder Science”"
  },
  {
    "objectID": "intro.html#community",
    "href": "intro.html#community",
    "title": "1  rOpenSci & Our Community",
    "section": "\n1.2 Our Community",
    "text": "1.2 Our Community\nOur community is our best asset! Without the secret sauce that is the Humans of rOpenSci, we’re just a lot of (really good) packages and processes. Our community is an ephemeral thing. It’s everywhere and nowhere. It’s people who believe in our mission and share our values, and have a mindset for learning, improving, and innovating together. It’s people who prioritize open, reusable, and reproducible research software while also prioritizing creating inclusive spaces through empathy and building trust. There are no stupid questions at rOpenSci; everyone appreciates the diversity of expertise and entryways to coding in this thing we love called R.\nThe rOpenSci community is a self-identifying group composed of users and developers of R software tools who, together, contribute to the technical and social infrastructure for open and reproducible research. Our specific focus is on software and best practices that lower the barriers to working with scientific data sources. Community members are people who use, cite and share use cases for rOpenSci packages, attend or present in our Community Calls, write a post for our blog, participated in an rOpenSci unconf, or in our research domain focused communities like rOpenSci-Antarctic and Southern Ocean Research, answer questions in our fora, actively participate in the life of an rOpenSci project reporting problems and recommending or implementing solutions, contribute to, or maintain a package, are Champions, mentors or trainers in our Champions Program, localize our material, or participate in rOpenSci peer review as a reviewer, author or editor.\nHaving a diverse community is important to us. We welcome anyone dedicated to making their science more open and supporting others in that pursuit, no matter their technical expertise, career stage, or work sector. Further, we welcome people of all backgrounds, including but not limited to any sexuality, gender identity, and race. We are anti-racist. We recognize that communities are not inclusive by default, particularly as they grow: they require deliberate attention. We are carrying out a Champions Program and Localization projects to ensure our research software serves everyone in our communities. We are all supported by rOpenSci’s Community Manager and a Code of Conduct that has clear guidelines for behavior and reporting, and is enforced by a committee including rOpenSci staff and an independent community member.\n\n1.2.1 Humans of rOpenSci\nIn this section we point to groups of people with various formal and informal roles in our community. This gives some transparency, may help people “recognize themselves” in some roles, and provide a foundation to allow folks to reach out to others to learn about making contributions.\nrOpenSci was founded in 2011 by Karthik Ram, Scott Chamberlain, and Carl Boettiger, ecologists who were motivated to make scientific data retrieval reproducible.\nStaff are:\nJeroen Ooms (Lead Infrastructure Engineer), Yanina Bellini Saibene (Community Manager), Mark Padgham (Software Research Scientist), Maëlle Salmon (Research Software Engineer) and Steffi LaZerte (Community Assistant) .\nScott Chamberlain (Technical Lead), Stefanie Butland (Community Manager) and Stacey Dorton (Administrative Manager) are Staff alumni.\nStrategic Advisors\nKarthik Ram (Advisor), Carl Boettiger (University of California, Berkeley), Jenny Bryan (Posit) and Rich FitzJohn (Imperial College London) volunteer their time.\nSoftware peer review Editors\nNoam Ross (Executive Director), Mark Padgham (Software Research Scientist), Maëlle Salmon (Research Software Engineer), Anna Krystalli (Research Software Engineering consultant / Data Scientist), Mauro Lepore (Theia Finance Labs), Laura DeCicco (USGS), Julia Gustavsen (Agroscope), Emily Riederer (Capital One), Adam Sparks (Curtin University), Jeff Hollister (US Environmental Protection Agency), Rebecca Killick (Lancaster University), Toby Hocking (Northern Arizona University), Emi Tanaka (Biological Data Science Institute, Australian National University), Jouni Helske (University of Jyväskylä, Finland), Beatriz Milz () and Margaret Siple (NOAA AFSC Groundfish Assessment Program - RACE division) volunteer their time.\nScott Chamberlain (Technical Lead), Lincoln Mullen (George Mason University), Brooke Anderson (Colorado State University), Melina Vidoni (RMIT University), Ben Bolker (McMaster University), Stephanie Hicks (Johns Hopkins University), Paula Moraga (King Abdullah University of Science and Technology) and Leonardo Collado-Torres (Lieber Institute for Brain Development) are Editor alumni.\nRead posts introducing Laura DeCicco, Julia Gustavsen, Mauro Lepore, Brooke Anderson and Melina Vidoni, and Anna Krystalli and Lincoln Mullen. We occasionally recruit guest editors for some package reviews.\n\n\n\n\n\nHeadshots of the rOpensci team\n\n\nGet to know some of the more experienced folks in our community by reading the .Rprofile series of posts for which Kelly O’Briant interviewed Mara Averick, Jenny Bryan, Julia Stewart Lowndes (with assistance from Sean Kross), Karthik Ram, Noam Ross, Julia Silge, and David Smith.\nYou can also have a look at some of the teams and people behind the development of software and packages many of us use and which are available through the R-Universe by reading the The Stars of the R-Universe series of post.\nOver 150 people have reviewed 135 packages from 803 authors!\nMore than 90 people have presented in our Community Calls attended by more than 900 people in more than 50 countries.\nYou can get to know some community members by reading the blog posts and tech notes they’ve written about their packages, their reviewer experiences, the Community Calls they’ve presented in, or their career paths in R. We have an authors page on our website that allows you to find these people by name. The authors page does not yet include rOpenSci package authors.\n\n\nScreenshot of the rOpenSci authors page showing thumbnails of author avatars next to their names\n\n\nMany of rOpenSci’s tools are developed by practicing scientists and other researchers who foster strong communities among users and developers in their research domains and openly share their expertise in discussions of best practices.\n\nThe Antarctic/Southern Ocean rOpenSci community led by Ben Raymond, Jess Melbourne-Thomas, Sara Labrousse, Michael Sumner, and Anton Van de Putte aims to strengthen the community of R users and developers in this area of research.\nHydrology researchers Louise Slater, Sam Zipper, Sam Albers, Ilaria Prosdocimi, Claudia Vitolo, and others promote open package development and peer review in their paper Using R in Hydrology and some of them created and maintain the rOpenSci Task View on hydrological data and modeling in which many of the R packages have been peer reviewed through rOpenSci.\nCommunity members who are academic experts in climate and weather (Brooke Anderson), archaeology (Ben Marwick), transport (Robin Lovelace), hydrology (see above), and Antarctic research (see above) highlighted sources of open data for research in their fields and the R tools to access them in When Field or Lab Work is not an Option - Leveraging Open Data Resources for Remote Research\n\n\nMany in the rOpenSci community participate in related organizations and communities like R-Ladies, The Carpentries, Latin American R community, the MiR community for underrepresented minority users of R, AfricaR, and Bioconductor.\nWe believe in giving credit to people for their contributions and sharing our gratitude. Our Thank You, 2019 post, acknowledging individual contributors, is one example of how we do that. For package authors participating in software peer review, we encourage “gratitude through semantic metadata” with the option to acknowledge reviewers in the package DESCRIPTION (with reviewers’ consent).\n\n\n1.2.2 The special case of rOpenSci unconfs\nBetween 2014 and 2019 we held in-person hackathon-flavored unconferences - five in the US and four in Australia. The “rOpenSci unconf” became a place where people met, created and developed projects together, and got to know each other. You can get a feel for our unconfs by reading blog posts about the events and projects and by listening to the Credibly Curious podcast episode recorded during ozunconf18 by Nick Tierney and Saskia Freytag. Through these we fostered a community of trust that functions online effectively and with kindness. Our unconfs empowered many participants to run their own local unconferences, make new projects happen, build new communities, build relationships that led to collaborations and career moves. Perhaps the biggest impact of rOpenSci unconfs was on peoples’ confidence and their perceptions of the value they each bring to the world of R in open research.\nRest assured, we’re pondering how to continue building this trust network through collaborative online events.\n\nThe rOpenSci model has contributed much hidden skills and relationship infrastructure that has helped #rstats flourish. It’s been a delight to participate in this and see people that got a start at an unconf gain confidence and grow into heavyweight community contributors and leaders over the years. Miles McBain on Twitter\n\n\nMy life took a turn thanks to rOpenSci - the community I was welcomed into there gave me deep friendships, new skills & confidence to get out of my comfort zone. And the #rstats world as a whole is better for rOpenSci’s existence. Jennifer Thompson on Twitter\n\n\nGroup photo from unconf17 showing a crowd of people waving at the camera; photo credit Karthik Ram"
  },
  {
    "objectID": "motivations.html",
    "href": "motivations.html",
    "title": "2  What brings you here? I want to …",
    "section": "",
    "text": "Contributors to rOpenSci come with a wide range of motivations, which can include wanting a tangible way to participate in open science. First-time contributions may come from people in different places on a continuum of experience: from those who consider themselves newcomers exploring the landscape and trying to see where they fit, all the way to more experienced folks who know exactly what they have to offer and what they would like to contribute.\nContributing to rOpenSci can help you build your track record of public contributions (such as code or documentation on GitHub), and may help improve your CV for job, fellowship, or award applications.\nParticipation in an open source project like rOpenSci is more likely to be a lifecycle than a linear path. Having a package pass peer review for the first time can feel like a huge milestone. You might write a blog post about the package, “give back” by participating as a reviewer or mentoring someone else in their first review, or answering questions about package maintenance. But as a person becomes more experienced, they may move on. The value someone might get out of participating here will change over time and that is perfectly ok.\nDo you already know what value you want to get out of contributing? (It’s ok if you don’t know yet.) To help you recognize yourself, we’ve categorized what we think contributors to rOpenSci want into: Discover; Connect; Learn; Build; Help. For each category, we list examples of what those contributions might look like and we link to our resources to help you get started.\nChoose your path. It’s the journey, not the destination."
  },
  {
    "objectID": "motivations.html#discover",
    "href": "motivations.html#discover",
    "title": "2  What brings you here? I want to …",
    "section": "\n2.1 Discover",
    "text": "2.1 Discover\nMaking data, tools, and best practices more discoverable is part of our mission. For many, using an rOpenSci package is their first encounter with our organization. It’s the most common gateway to further involvement through connections with other users, or sharing use cases, for example.\nScan the “I want to” statements below to find something that interests you. Click on any action under a statement to go to a description of the relevant rOpenSci resource with details on how to contribute.\nI want to:\nDiscover packages I can use to facilitate my research and access open data\n\nBrowse rOpenSci packages\nExplore use cases for rOpenSci packages\n\nRead blog posts or tech notes about specific rOpenSci packages, about creative use cases for multiple rOpenSci packages, or about open data accessible through our packages\n\nBrowse task views to discover packages to use\nSubscribe to our Newsletter\nFollow rOpenSci on Mastodon\n\nBrowse citations of rOpenSci packages to see what other researchers are using\nExplore the R-universe\n\nDiscover resources on best practices for software development\n\nRead the Dev Guide\n\nRead or ask questions in the “Best Practices” category in our forum or on Slack\n\nAttend a Community Call\nWatch recordings and read collaborative notes from past Community Calls\nRead blog posts or tech notes\n\nDiscover resources on community building\n\n\nRead blog posts or tech notes, particularly those tagged with “Welcome”, “unconf”, or “icebreaker”\n\nRead about our community and some of the communities built by our members"
  },
  {
    "objectID": "motivations.html#connect",
    "href": "motivations.html#connect",
    "title": "2  What brings you here? I want to …",
    "section": "\n2.2 Connect",
    "text": "2.2 Connect\nAn implicit value in participating in rOpenSci is the connections people make with other scientists, R users, developers, or research software engineers who want to do their research in a more open and reproducible fashion. The rOpenSci community is a welcoming place to connect with like-minded people who share interests and values and a motivation to develop the related skills, techniques, and practices.\n\nHey! You there! You are welcome here  Shannon Ellis’ rOpenSci blog post\n\nScan the “I want to” statements below to find something that interests you. Click on any action under a statement to go to a description of the relevant rOpenSci resource with details on how to contribute.\nI want to:\nBelong to a supportive community\n\nRead about our community\n\nMeet the Humans of rOpenSci and learn about their roles, their research, career paths, and contributions\n\nRead our Code of Conduct to ensure you’re prepared to participate\n\nAttend a Community Call to get a feel for how we work and communicate with each other. See who else is interested in a topic, what questions they’re asking, ask your own questions in a collegial environment, share your expertise in a collaborative notes resource for the call\n\nRead blog posts or tech notes, particularly those tagged with “Welcome” to get a feel for how we value people in our community.\n\nSupport fellow community members (e.g., by welcoming newcomers, giving credit, connecting members with people or resources)\n\nAsk or answer questions in the forum or on Slack\n\n\nJoin a coworking session to interact with others and get work done.\n\nMeet and work with other users and developers of open science packages\n\n\nAddress an issue. Explore open issues in rOpenSci packages and consider submitting a fix.\n\nVolunteer to review a package and use your experience to help a developer\nVolunteer to maintain or co-maintain a package\n\nTry a 2-hour remote co-working session with someone in our Slack #co-working channel. Read about contributions required to join rOpenSci Slack\n\n\nSeek community feedback on your package ideas in the “Packages” category in our forum. Ideas for new packages, package updates, or package features.\n\nJoin a coworking session to interact with other developers and get work done.\n\nGain exposure in the open science R community\n\n\nShare a use case for an rOpenSci package\n\nAddress an issue. Explore open issues in rOpenSci packages and consider submitting a fix.\nVolunteer to review a package\n\nSubmit your package for peer review after determining whether it‘s in scope for rOpenSci\n\nWrite a blog post or tech note to share your experiences (see both the Blog and the Blog Guide)\nEnsure your package is easily citable\nCreate your own R-universe\n\nGrow my local or topic-specific community\n\n\nRead blog posts or tech notes, particularly those tagged with “Welcome”, “unconf”, or “icebreaker”\nCreate a community R-universe\n\nRead about our community and some of our neighbors: rOpenSci Antarctic and Southern Ocean Research; R-Ladies; MiR Community; the Latin American R community; Comunidad de Desarrolladores de Software en Bioinformática, CDSB; Openscapes; The Carpentries."
  },
  {
    "objectID": "motivations.html#learn",
    "href": "motivations.html#learn",
    "title": "2  What brings you here? I want to …",
    "section": "\n2.3 Learn",
    "text": "2.3 Learn\nrOpenSci provides avenues for new and more seasoned R users and developers to learn - from learning by reading and listening, to learning by doing. All in an atmosphere of trust, generosity, giving credit, and sharing gratitude. We focus here on using, developing, documenting code, and building community, as they specifically align with our mission. People looking for more general R learning may refer to RStudio Education and The Carpentries.\nScan the “I want to” statements below to find something that interests you. Click on any action under a statement to go to a description of the relevant rOpenSci resource with details on how to contribute.\nI want to:\nBe informed by reading and listening\n\nFollow rOpenSci on Mastodon\nSubscribe to our Newsletter\nRead blog posts or tech notes\nRead the R-universe discussion\nAttend a Community Call\nWatch recordings and read collaborative notes from past Community Calls\n\nExplore use cases shared by community members\n\nFollow discussions about statistical software peer review, best practices, and Q & A in the forum or on Slack\n\n\nJoin a coworking session and listen to questions and answers\n\nImprove the reproducibility of my research and apply best practices in my work\n\n\nUse an rOpenSci package if it does something you need instead of writing new code yourself\n\nAttend a Community Call or watch recordings and read collaborative notes from past Community Calls. Some past calls have covered these topics\n\nRead the Dev Guide and adopt some new best practices\n\nRead our book on Statistical Software Peer Review to familiarize yourself with standards being developed\n\nRead or ask questions in the “Best Practices” category in our forum or on Slack\n\n\nSubmit your package for peer review after determining whether it’s in scope for rOpenSci\n\nImprove my R and software development skills\n\nFind new packages to try: Browse rOpenSci packages, explore use cases, read blog posts or tech notes\n\nVolunteer to review a package\nSeek community feedback on your package ideas in the “Packages” category in our forum\nReview package documentation\n\nAddress an issue. Explore open issues in rOpenSci packages and consider submitting a fix.\n\nMake a pull request to add/fix examples or clarify package documentation\nWrite a vignette/article for a package\nShare a use case\n\nWrite a post about using rOpenSci packages on your own blog\nAfter learning something new, write a blog post or tech note to share your experiences (see both the Blog and the Blog Guide)\n\nAsk or answer questions in the forum or on Slack\n\nVolunteer to maintain or co-maintain a package\n\nSubmit your package for peer review after determining whether it’s in scope for rOpenSci\n\nJoin a coworking session and ask questions of other developers\n\nLearn how to review R code\n\n\nRead blog posts or tech notes written by reviewers (including some first-time reviewers) about their experiences\n\nRead the Dev Guide, especially the Reviewer Guide section\n\nVolunteer to review a package. Learn by doing!\n\nLearn how to get my package on CRAN\n\n\nRead the Dev Guide, especially the CRAN Gotchas section\n\nRead or ask questions in the “Packages” category in our forum or on Slack\n\nSeek community feedback on your package ideas in the “Packages” category in our forum\n\nSubmit your package for peer review after determining whether it’s in scope for rOpenSci. The review process is very useful for making sure your package is also suitable for CRAN.\n\nLearn about career paths in R and open science\n\n\nMeet the Humans of rOpenSci and learn about their roles, their research, career paths, and contributions\n\nRead blog posts or tech notes, particularly those tagged with “Interviews”, which feature experienced rOpenSci community members\n\nBrowse the Jobs category in our public forum or in Slack"
  },
  {
    "objectID": "motivations.html#build",
    "href": "motivations.html#build",
    "title": "2  What brings you here? I want to …",
    "section": "\n2.4 Build",
    "text": "2.4 Build\nPerhaps the roles people associate most with contributing to rOpenSci involve building and influencing the research software landscape in R. This includes things like having a stake in package development and documentation, discussions on new projects like developing standards for statistical software peer review, or influencing the adoption of more open and reproducible research in your department, your institution, or your field.\nScan the “I want to” statements below to find something that interests you. Click on any action under a statement to go to a description of the relevant rOpenSci resource with details on how to contribute.\nI want to:\nImprove and promote open science in my field\n\nVolunteer to review a package\nContribute to a task view. Make a pull request to add packages or details to an existing task view after discussing your approach with the maintainer\nDevelop a package and submit it for peer review after determining whether it’s in scope for rOpenSci\nRecommend topics or speakers for Community Calls\nHelp organize a Community Call\n\nWrite a post about using rOpenSci packages on your own blog\nCite rOpenSci packages in manuscripts and presentations\nEnsure your package is easily citable\n\nExplore the R-universe and share your findings with colleagues\nCreate your own R-universe\nRead/Contribute to the R-universe discussion\nReport a bug in the R-universe\n\nInfluence package development\n\nVolunteer to review a package\n\nReport a bug in an rOpenSci package\nMake a feature request\n\nAdd a package idea to the Wishlist in the rOpenSci forums\n\nAddress an issue. Explore open issues in rOpenSci packages and consider submitting a fix.\n\nMake a pull request to fix a bug or add a feature\nRead/Contribute to the R-universe discussion\nReport a bug in the R-universe\n\nImprove package documentation and examples\n\n\nReview documentation and help the author by letting them know what’s unclear or Make a pull request to add/fix examples or to add/clarify documentation\nWrite a vignette/article for a package\n\nShare a use case or encourage your peers to do the same\n\nPromote best practices for R development\n\n\nEngage with us on Mastodon. Amplify best practices from our social media to your networks\n\nAsk or answer questions in the the “Best Practices” category in our forum or on Slack\n\n\nWrite a blog post or tech note about the development of your rOpenSci package or your implementation of best practices (see both the Blog and the Blog Guide)\nRecommend topics or speakers for Community Calls\nHelp organize a Community Call\nConsider being a Community Host for a Coworking session\n\nPromote software citations\n\n\nCite rOpenSci packages in manuscripts and presentations and encourage your colleagues to do the same\nEnsure your package is easily citable\n\nGet more visibility and more users for my rOpenSci package\n\nPublish a paper about your package\n\nWrite a post about using rOpenSci packages on your own blog\nWrite a post or tech note about your package for the rOpenSci blog (see both the Blog and the Blog Guide)\nCreate your own R-universe\n\nGet people to work on open issues in my rOpenSci package\n\n\nLabel your issues to make them more discoverable\n\nInclude future plans for your package in the README.\n\nRequest a co-maintainer for your package. Bringing on an additional maintainer can be a way to manage the volume of work, work through issues, and increase package sustainability.\n\nConsider being a Community Host for a Coworking session and supporting a mini code-a-thon."
  },
  {
    "objectID": "motivations.html#help",
    "href": "motivations.html#help",
    "title": "2  What brings you here? I want to …",
    "section": "\n2.5 Help",
    "text": "2.5 Help\nOne major motivation for contributing to rOpenSci is people’s desire to “give back” in appreciation of good software, good infrastructure, and a good community in which folks share their gratitude often and openly. The ways you can help are limitless. We encourage people to support others by sharing their experience or expertise. Don’t underestimate the value of sharing your first-time experience doing a thing; that is an immense help to others who don’t yet recognize the value of their own contributions.\nScan the “I want to” statements below to find something that interests you. Click on any action under a statement to go to a description of the relevant rOpenSci resource with details on how to contribute.\nI want to:\nSupport rOpenSci or give back to open source\n\nRead about our mission\nTell a friend about an rOpenSci package that may be useful for their work\n\nCite rOpenSci packages in manuscripts and presentations and encourage your colleagues to cite software\nEnsure your package is easily citable\n\nSubmit a use case for an rOpenSci package\n\nAddress an issue. Explore open issues in rOpenSci packages and consider submitting a fix.\nContribute to the R-universe discussion\nReport a bug in the R-universe\n\nEngage with us on Mastodon. Amplify best practices from our social media to your networks. Reply to a post to share your experience or expertise on a topic\nWeigh in on tough technical issues on software review threads\n\nDonate to rOpenSci\n\nHelp other community members\n\n\nVolunteer to review a package. We appreciate having experienced reviewers who are willing to be paired with a first-time reviewer\n\nAnswer questions in the forum or on Slack\n\n\nSupport fellow community members (e.g., by welcoming newcomers, giving credit, connecting members with people or resources)\n\nJoin a coworking session and answer questions\n\nProvide something I think the community is missing\n\nContribute something that isn’t addressed in this Contributing Guide"
  },
  {
    "objectID": "resources.html",
    "href": "resources.html",
    "title": "3  rOpenSci Resources",
    "section": "",
    "text": "Each section of this chapter describes and links to a specific rOpenSci resource with a “How to contribute” list of actions you could take.\nNot sure where to get started? Browse What brings you here? to help you explore what you want to get out of contributing. Categories - Discover, Connect, Learn, Build, Help - each have “I want to” statements followed by examples of specific ways you can contribute. Each example links to a resource in this chapter to help you take action."
  },
  {
    "objectID": "resources.html#conduct",
    "href": "resources.html#conduct",
    "title": "3  rOpenSci Resources",
    "section": "\n3.1 Code of Conduct",
    "text": "3.1 Code of Conduct\nAll participation in rOpenSci activities is supported by a Code of Conduct that has clear guidelines for reporting and is enforced by a committee including rOpenSci staff and an independent community member.\n\n3.1.1 How to contribute?\n\n\nRead our Code of Conduct to ensure you are ready to participate"
  },
  {
    "objectID": "resources.html#channels",
    "href": "resources.html#channels",
    "title": "3  rOpenSci Resources",
    "section": "\n3.2 Communication channels",
    "text": "3.2 Communication channels\nThe Humans of rOpenSci connect and contribute online across many timezones. We carry out our work using multiple channels for one-way and multi-way communications that involve different levels of commitment.\nGitHub is the platform we use to host our software and documentation projects using Git version control. Our newsletter, delivered every two weeks, is the ideal way to stay informed without being overwhelmed by communication channels. We use our public discussion forum, Mastodon, and Slack, each for specific modes of making announcements, promoting contributions from community members, asking and answering questions about rOpenSci packages and recommended best practices, knowledge-sharing and exploration of ideas, as well as more passive learning by “listening” to community wisdom.\nThe following table lists every communication channel and its purpose. Below that we describe how we use a few specific channels and provide some advice on deciding whether a question you might have is one for rOpenSci or belongs in a more general forum.\n\n\n\nChannel\nPurpose\n\n\n\nWebsite https://ropensci.org/ https://github.com/ropensci/roweb3\n\nHome of rOpenSci\n\n\nNewsletter\nA digest of R package news, use cases, blog posts, events, curated every two weeks. Subscribe via RSS (XML), JSON feed, or email.\n\n\nVideos\nVideos from past Community Calls on Vimeo\n\n\nMastodon\nPosts about rOpenSci software, use cases, blog posts, tech notes, events\n\n\nVideo conferencing\nCommunity Calls and remote co-working sessions on Zoom\n\n\nGitHub - ropensci\nMature R packages contributed by rOpenSci staff or community-contributed peer-reviewed packages; software peer review system; rOpenSci website\n\n\nGitHub - ropenscilabs\nExperimental packages and code experiments from staff, collaborators, and participants of unconfs and related events\n\n\nGitHub - ropensci-org\nNon-code repositories like this guide, the blog guide, ideas for Community Calls\n\n\nDiscussion forum\nPublic forum on Discourse for use cases, Q & A about rOpenSci packages, exploration of ideas and best practices\n\n\nSlack\nA semi-open space for communications among people who contribute to rOpenSci\n\n\nEmail: info at ropensci dot org\nTo reach rOpenSci staff when other modes are not suitable\n\n\n\n\n\n\n\nGitHub\nThe majority of rOpenSci’s work happens on GitHub. In this Guide we use terms like “opening an issue” to refer to tracking ideas, enhancements, tasks, or bugs in a project, and “making a pull request” to submit your proposed fix or new feature. If you’d like some general information on the language and workflow of GitHub, see Collaborating with issues and pull requests. To learn about Markdown formatting for interacting with others in issues and pull requests see Getting started with writing and formatting on GitHub. For guidance on connecting R to GitHub we recommend Happy Git and GitHub for the useR - https://happygitwithr.com/.\n\n\n\nPublic discussion forum\nThe forum is where we encourage people to have Q & A on a wide range of topics. It is organized in categories including Use Cases where people post examples of how they’ve used rOpenSci packages, Blog where an entry is made every time a new post or tech note appears on our blog, Statistical Software Peer Review for discussion related to developing a software peer review system for statistical software in R, Wishlist for discussions about requested new R packages, Antarctic for discussions about R in Antarctic and Southern Ocean science, and others! It includes posts like “How do you hire data people in a fair and unbiased way?” in the Community category, to specific help requests about our packages like “Taxize: Get rank of lowest common taxon”.\nThe benefit of posting to our forum, rather than our semi-open Slack space or by email, is that it is open for others to benefit, searchable within the forum, and discoverable by browser-based searches. Posting in the forum requires login and we encourage people to use their real names.\n\n\n\nSlack\nWe use Slack as a semi-open space for communications among people who have made specific contributions to rOpenSci. These include people who:\n\nhave begun the software review process for their package (once it’s determined to be in scope)\nare assigned to review a package\n\nmade significant contributions to rOpenSci, including taking over maintenance of an rOpenSci package\nhave written a blog post or tech note that is published on our site\npresented in a Community Call\n\nparticipated in an unconf\n\nuse R in a research domain that rOpenSci is explicitly supporting, such as Antarctic and Southern Ocean Research\n\nPeople join Slack by invitation from our Community Manager or other staff. If you are eligible, you may contact us via our contact form; provide your full name and email address.\n\nThe benefit of Slack is the ability to more directly access rOpenSci staff and community members, including some more experienced folks in channels like #software-review or #package-maintenance, or to watch for postings in #jobs. People consider it an easier place to ask questions or explore ideas because while it has over 500 members, it’s not fully “in the open”. We actively welcome new members and ensure that all conversations are collegial.\n\n\n\nHow to get help\nThere is an etiquette to getting help and asking questions. We focus on using, developing, documenting code and infrastructure, and building community, as they specifically align with our mission.\nPeople looking for more general R learning may refer to RStudio Education and The Carpentries.\nRead these posts if you have an R question: Where to get help with your R question?, by Maëlle Salmon; Getting help in R: do as I say, not as I’ve done, by Samantha Tyner.\nIf you’re asking for R help, reporting a bug, or requesting a new feature, you’re more likely to succeed if you include a good reproducible example, a “reprex”. There’s a well-documented package for that including a video, and an rOpenSci Community Call - How to Ask Questions so they get Answered! Possibly by Yourself!, with Jenny Bryan, JD Long, and Scott Chamberlain.\n\n3.2.1 How to contribute?\n\nRead our Code of Conduct to ensure you are ready to participate\nFollow rOpenSci on Mastodon\nSubscribe to our Newsletter\n\nAsk or answer questions. Participate in discussions in the forum, on GitHub or on Slack\n\nTry a 2-hour remote co-working session with someone in our Slack #co-working channel\nSeek community feedback on your package ideas in the “Packages” category in our forum"
  },
  {
    "objectID": "resources.html#commcalls",
    "href": "resources.html#commcalls",
    "title": "3  rOpenSci Resources",
    "section": "\n3.3 Community Calls",
    "text": "3.3 Community Calls\nOur Community Calls are an ideal way to get familiar with rOpenSci. They give you a feeling for how we blend rigorous expertise and recommendations with a friendly and safe way for all participants - presenters and attendees - to stretch themselves. They’re free and open for anyone to attend, and provide an opportunity to connect with rOpenSci community members around the world. Our session on Maintaining an R package had 90 participants from 18 countries!\nWe’ve run more than 25 Community Calls since their start in 2015. Topics range widely and include Reproducible research with R, Testing, Security for R, How do you review code that accompanies a research project or paper?, Involving multilingual communities, Research applications of rOpenSci taxonomy and biodiversity tools, Governance strategies for open source research software projects and more!\n\nThere’s nothing like hearing a lively technical banter of experts to pick up the vernacular that one can easily build upon. The first-hand tips and tricks, do’s and don’ts, personal anecdotes of what worked beautifully and what crashed terribly, offered by years of experience are yet unmatched in bringing newbies into speaking the community’s language. Janani Ravi in “Maintaining an R Package - Community Call Summary”\n\nThese are not your usual webinar. Some calls might involve two to three speakers on a topic, some give an introduction to our tools in a specific research domain followed by several people presenting their use cases for those tools, and some are a moderated discussion among experts. We always leave at least 20 minutes for Q&A. We use collaborative note-taking allowing participants to share their own ideas or resources and to ask and answer questions.\n\nThis live shared document helps everyone … formulate what they would like to say. It also gives people the option to participate without having to … speak up on the call (thus reducing the barrier for people, especially newcomers, to ask questions). The document also gives an opportunity for anyone in the community to share their expertise … Janani Ravi in “Maintaining an R Package - Community Call Summary”\n\nRecordings of all past calls are available online, with closed captions (transcript of dialogue visible in text on video) for all calls in 2020 or later.\n\n\n\nExamples of community call thumbnails from our Vimeo page\n\n\n\n3.3.1 How to contribute?\n\n\nAttend a Community Call. No registration required. Find information about our next Call.\nWatch recordings and read collaborative notes from past Community Calls.\nHave an idea for a Community Call topic or a speaker to recommend? Have a relevant topic you’re keen to speak about? Recommend topics or speakers for Community Calls. Tell us in our public ideas repository.\nAre you really interested in the topic of an upcoming call? Why not help organize it? Contact our Community Manager via our contact form.\nAre you enthusiastic about the topic and planning to attend? You might want to write a summary for our blog. Contact our Community Manager via our contact form."
  },
  {
    "objectID": "resources.html#coworking",
    "href": "resources.html#coworking",
    "title": "3  rOpenSci Resources",
    "section": "\n3.4 Social Coworking and Office Hours",
    "text": "3.4 Social Coworking and Office Hours\nJoining a social coworking and office hours session is a great way to interact with other community members as well as to get work done or ask questions.\nCoworking is working at the same time, with others, but on different projects. It helps with networking, reduces social isolation, and increases accountability.\nThese sessions are informal 2hr meetings online, start with introductions and are followed by two 40min coworking sessions, inter spaced with a small break and scavenger hunt. During coworking, you can work quietly in the “Quiet” room, or hangout in the “Noisy” room. There, you can work, chat with others, or ask questions.\nEach room has a host, either rOpenSci staff or a Community Host, eager to answer questions about the theme of the month or other projects they’re working on.\nCoworking:\n\n3.4.1 How to contribute?\n\n\nAttend a Coworking session. No registration required. Find information about our next session on the Events page.\nWant to join as a Community Host? Have some interesting R topics you’d like to talk about and help others with? Contact our Community Manager via our contact form."
  },
  {
    "objectID": "resources.html#blog",
    "href": "resources.html#blog",
    "title": "3  rOpenSci Resources",
    "section": "\n3.5 Blog",
    "text": "3.5 Blog\nThe rOpenSci blog contains both long form blog posts and shorter tech notes. It’s a large, rich resource for learning about the R packages developed by staff and by community members and how people use them, the people and processes involved in our open software peer review system, and the value people get from being part of our community. We’ve published more than 500 posts since 2012 with more than half written by community members. The long form blog posts are for a broad readership, and the shorter tech notes include information on a software release with major new features, breaking changes, or significant new documentation for example.\nThis list gives you a taste of some themes. Click on a topic below to see some of our favorite examples.\n\n\n Welcome! \n\n\nWelcome Posts about the power of welcome and how we do it\n\n\n\n\n Interviews \n\n\nInterviews with rOpenSci staff and experienced community members\n\n\n\n\n Summarizing a Community Call \n\n\nMaintaining an R Package\n\n\nCode Review in the Lab\n\n\n\n\n About a peer-reviewed package \n\n\nrmangal: Making Ecological Networks Easily Accessible talks through the scientific problem and context, shows some code examples, and talks about peer review but doesn’t make that the dominant part of the post.\n\n\nForcing Yourself to Make Your Life Easier is an honest post with some reflection and an important message.\n\n\nAll posts tagged with “software peer review”\n\n\n\n\n Perspectives from software peer reviewers \n\n\nPosts tagged with “reviewers” including some first-time experiences\n\n\n\n\n Creative use cases for multiple rOpenSci packages \n\n\nGetting your toes wet in R: Hydrology, meteorology, and more\n\n\nThe Antarctic/Southern Ocean rOpenSci community\n\n\n4-post series starting with, Where to go observe birds in Radolfzell? An answer with R and open data\n\n\n\n\n About open data accessible through our packages \n\n\nWhen Field or Lab Work is not an Option - Leveraging Open Data Resources for Remote Research with resources highlighted by community experts and the rOpenSci team\n\n\n\n\n Using an rOpenSci resource, such as the Package Development Guide or a task view \n\n\nWhen Standards Go Wild - Software Review for a Manuscript\n\n\nUsing rOpenSci Software Peer Review Guidelines for Teaching\n\n\nGetting your toes wet in R: Hydrology, meteorology, and more\n\n\n\n\n Major updates to key packages \n\n\n(Re)introducing skimr v2 - A year in the life of an open source R project)\n\n\ndrake transformed (technote)\n\n\n\n\n Contributing to or taking over maintenance of a package \n\n\nRelaunching the qualtRics package has an engaging tone while being informative and providing technical details.\n\n\nMonkeying around with Code and Paying it Forward gives insight into how the author is thinking about workflows and contributing to rOpenSci.\n\n\nMaintaining an R Package - Community Call Summary\n\n\n\n\n Describe an unsolved problem and a call to action \n\n\nrOpenSci Educators Collaborative: What Are The Challenges When Teaching Science With R? (3 posts from unconf18)\n\n\n\n\n Reproducibility \n\n\nPosts tagged with “reproducibility”\n\n\nPosts tagged with “reproducible research”\n\n\n\n\n About our unconf events and projects \n\n\nBringing together people and projects at unconf17\n\n\nSix tips for running a successful unconference\n\n\nThe value of welcome, part 2: How to prepare 40 new community members for an unconference\n\n\nSharing the recipe for rOpenSci’s unconf ice breaker\n\n\nPosts about ozunconf events and projects\n\n\nPosts about all unconf events and projects\n\n\n\n\nThere are many ways to explore our blog and tech notes content:\n\nSearch by tag\n\nSearch by author\n\nSearch by date\n\n\nctrl/cmd-f for a word in archive page of post titles\n\n\n3.5.1 How to contribute?\n\nRead blog posts or tech notes\nDid you find an article interesting or useful? Share posts with your network\n\n\nComment on a post to share your perspective or to ask a question. Comments appear in our public discussion forum.\nWe love to hear stories about how people use our tools and resources. Have an idea for our blog? Write a blog post or tech note. Take a look at examples of posts above and on the blog, browse the Blog Guide to see what’s involved, then contact our Community Manager via our contact form to propose and discuss your idea."
  },
  {
    "objectID": "resources.html#blogguide",
    "href": "resources.html#blogguide",
    "title": "3  rOpenSci Resources",
    "section": "\n3.6 Blog Guide",
    "text": "3.6 Blog Guide\nOur Blog Guide is written to help authors and editors of rOpenSci blog posts and tech notes to address frequently asked questions, and frequently given suggestions. We created it after reviewing and publishing over 100 posts by community members.\nChapter 1 coaches you in thinking through what you might say in a post and points to examples on different themes. Chapter 2 provides detailed technical guidelines for submitting a post - from drafting in an R Markdown or Markdown template to submitting it for review using GitHub pull request infrastructure. We provide templates, code snippets, our style guide, and checklists to help. One chapter provides some motivation for doing the extra work to contribute a post by outlining what we do to promote it to our large audience. Another outlines how to respond to an editor’s review of your draft post.\n\n3.6.1 How to contribute?\n\n\nWrite a blog post or tech note. Read about some blog themes, browse the Blog Guide to see what’s involved, then contact our Community Manager via our contact form to propose and discuss your idea.\nSee a typo or something that’s not clear? Submit a correction. Open an issue in the Blog Guide repository or make a pull request with your suggestion and one of the authors will review it. GitHub has helpful documentation for opening issues and making pull requests."
  },
  {
    "objectID": "resources.html#packages",
    "href": "resources.html#packages",
    "title": "3  rOpenSci Resources",
    "section": "\n3.7 Packages & Docs",
    "text": "3.7 Packages & Docs\nThe Packages page on our website lists our carefully vetted, staff- and community-contributed R tools that lower barriers to working with open data sources for various research applications. Of over 400 packages, about 30.0% have been peer reviewed, and more than half are on CRAN.\nThe list is maintained in our registry, which contains much more metadata about the packages. Documentation for rOpenSci packages is built and hosted at an automated documentation server (docs.ropensci.org; docs repository).\nYou can discover packages by searching with a package name, name of the maintainer (maybe you’re a fan of their work), or by keywords in the description such as “taxonomy” or “weather”. Clicking on any package row expands the listing to include a package description and list of academic citations. Clicking on the “View Documentation” Button takes you to the docs page where you can find information on using the package from Getting Started, Articles and Vignettes, and on making contributions from reporting bugs, to submitting feature requests or bug fixes. If present, clicking on the “Peer-reviewed” badge will bring you to the peer-review discussion thread.\n\nScreen shot of packages list showing expanded information on the bomrang package and what to click to access different information\n\n\nOften the best way to start learning about a package is to install it, and start playing with it. Try some of the examples, maybe on your own data, or with your own use case. You can learn more about how to use a package by reading blog posts and tech notes tagged with package names (like tesseract or taxize). Browse the tags page to find posts. Find examples of how others use them by browsing the UsesCases category of our public forum. Some of our Community Calls focus on packages in a specific domain. Check out our archive with videos of past calls. Looking for more examples? Ask in the forum.\nMost developers are interested to hear from you while you’re getting to know a package Is there something unclear in the documentation? Some parts of the software you find confusing? It’s helpful if you share these experiences When possible, use a reprex“, a reproducible example.\nWhile package maintainers have the ultimate say on package features, they are often eager to modify a package to accommodate real world use cases If you have a particular feature request in mind, open an issue in the package repository with a succinct idea, and ideally a minimal reproducible example if code is applicable Avoid emailing maintainers directly - it may be tempting but benefits no one else For some, it’s a challenge to have the confidence to make your suggestion in the open, but taking that step can help others This also helps maintainers manage their work by keeping communications within the GitHub infrastructure that houses the package.\nYou can also help out by addressing issues (see the Issues List), or making pull requests to add features, fix bugs, add documentation, or add vignettes or articles To do so, take a look at the project’s contributing guide (here’s a nice example from Peter Desmet, and another from Noam Ross), then open an issue to discuss your approach with the author Create a pull request and submit your proposed solution!\n\n3.7.1 How to contribute?\n\n\nBrowse rOpenSci packages\nBrowse package Task Views\n\nUse an rOpenSci package (Yes, that is a contribution!)\nTell a friend about an rOpenSci package that may be useful for their work\n\nBrowse citations of rOpenSci packages to find interesting applications\n\nCite rOpenSci packages in manuscripts and presentations and encourage your colleagues to cite software Manuscript citations will appear on our packages page.\n\n\nJust learned that the webchem package was cited in a paper by a group of oncologists It totally made my morning to think that my code might someday contribute a teensy tiny bit to better treatments for cancer. Eric Scott on Twitter\n\n\n\nWrite a post about using rOpenSci packages on your own blog\n\nReport a bug by opening an issue. If you’re asking for R help, reporting a bug, or requesting a new feature, you’re more likely to succeed if you include a good reprex (a reproducible example).\n\nReview the documentation and give feedback to the author in an issue on any parts that are confusing\n\nMake a pull request to fix a typo or a bug, to add/fix examples, to add/clarify documentation, to add/update a citation file\n\nMake a feature request by opening an issue in a package that’s critical for your work\n\nWrite a vignette/article for a package. Contact the package author, preferably in an issue, to confirm they are receptive, propose your idea, and determine how they will review your contribution."
  },
  {
    "objectID": "resources.html#taskviews",
    "href": "resources.html#taskviews",
    "title": "3  rOpenSci Resources",
    "section": "\n3.8 Task Views",
    "text": "3.8 Task Views\nTask views are excellent resources for guidance on which packages are relevant to a certain topic They might list packages under sections like data retrieval, visualization, or analysis Here we list some task views maintained by rOpenSci staff and community members. They contain packages that are on CRAN and/or on GitHub.\nYou can contribute to task views by looking at the project’s contributing guide, then comment in an issue to discuss your approach with the maintainer Create a pull request and submit your proposed changes! If you have a problem with one of the packages discussed it’s best to use the specific communication channels of that package (e.g., GitHub Issues).\nTaxonomy, maintained by Scott Chamberlain, contains information on retrieving and manipulating taxonomic data in R.\nAntarctic and Southern Ocean Science, maintained by Ben Raymond, covers a range of topics within the geosciences, life sciences, physical sciences, and humanities and social sciences of particular interest to Antarctic and Southern Ocean researchers.\nHydrological Data and Modeling, maintained by Sam Zipper, Sam Albers, and Ilaria Prosdocimi, contains information about packages broadly relevant to hydrology, defined as the movement, distribution and quality of water and water resources over a broad spatial scale of landscapes The maintainers built on this task view in “Getting your toes wet in R: Hydrology, meteorology, and more”.\nArchaeological Science, maintained by Ben Marwick, contains packages useful for scientific work in Archaeology, grouped by topic.\nWeb Technologies and Services, maintained by Scott Chamberlain, Thomas Leeper, Patrick Mair, Karthik Ram, and Christopher Gandrud, contains information about how to use R and the world wide web together It focuses on packages for obtaining web-based data and information, frameworks for building web-based R applications, and online services that can be accessed from R.\n\n3.8.1 How to contribute\n\n\nBrowse existing Task Views to discover packages to use.\n\nMake a pull request to add packages or details to an existing task view after discussing your approach with the maintainer."
  },
  {
    "objectID": "resources.html#usecases",
    "href": "resources.html#usecases",
    "title": "3  rOpenSci Resources",
    "section": "\n3.9 Use cases",
    "text": "3.9 Use cases\nYou can find use cases for rOpenSci packages and resources on our rOpenSci Use Cases page or in our public forum UseCases category.\nA “use case” here is a write-up of an example, including an explanation of what you did, some code, and where possible, an image showing an outcome. It might take the form of a code snippet, or a link to a blog post or to an analysis in a public repository.\nMany of these use cases include applications in academia, industry, government, or “just for fun” with examples on biodiversity, ecology, text processing, bibliometrics, workflows and reproducibility, weather, public health, bicycle networks, agronomy, epidemiology, surveys, seafood mislabelling, tweets about fires, and others!\nSome use cases outline examples of how resources like our guide on package development, review and maintenance have been used independently of rOpenSci Read more in our blog post, What are Your Use Cases for rOpenSci Tools and Resources?\nYou can search or sort by package, title or date on the rOpenSci Use Cases page and topics in the forum are tagged with the names of rOpenSci packages they address Clicking on a tag will show you all other posts in the forum that share that tag You can also search with terms like “weather” or “doi” to find use cases in an area of application.\nWe love it when people share their use cases For so many reasons.\nIt’s valuable to both users and developers of a package to see how it has been used “in the wild” This goes a long way to encouraging people to maintain their package knowing there are others who appreciate, use, and build on their work This also helps people imagine how they might use a package to address their research question, and provides some code to give them a head-start.\nDevelopers and users will thank you and you’ll get the credit and some visibility for your work!\n\n3.9.1 How to contribute\n\n\nExplore use cases on the rOpenSci Use Cases page or in our public forum UseCases category Comment on or [emoji heart] use cases that you find useful or inspiring. Consider posting or sharing to other platforms if you find them particularly helpful.\nWe’ve made it easy to submit your use cases for rOpenSci packages (including your own) or resources by creating a template to guide you. When you post your use case in the forum we’ll post to Mastodon about it to rOpenSci’s followers, tagging you and the package or resource author, and we might feature it in our newsletter.\n\nEncourage your peers to submit use cases. Over time, these “small” actions are creating valuable open resources!\n\n\nScreen shot of the use case template\n\n\nUse case template"
  },
  {
    "objectID": "resources.html#issues",
    "href": "resources.html#issues",
    "title": "3  rOpenSci Resources",
    "section": "\n3.10 Issues list",
    "text": "3.10 Issues list\nHere we describe how to find and consider working on open issues in rOpenSci projects. In 2019, 117 people made their first-ever code contribution to rOpenSci! The rOpenSci issues list is a dynamic search on GitHub showing all open issues in the “rOpenSci GitHub organization”, and the rOpenSci Help Wanted page shows a subset of open issues labelled help wanted.\nIssues in GitHub are used to track ideas, enhancements, tasks, or bugs. For general information on using issues see the documentation on Managing your work with issues, and the GitHub Guide Mastering Issues. Issues can be opened by anyone - the package maintainer, a user reporting a bug or something in the documentation that’s confusing, or a person proposing their idea for contributing. For more sources of information on using GitHub see Communication channels.\nMany of our packages are developed by busy community members working in research environments in which software development is a voluntary, side project. These developers often appreciate help in addressing open issues in their packages. These can involve either code or non-code contributions. Some will be suitable for beginners and some will require more experience. To contribute, see if there is an issue that interests you, take a look at the project’s contributing guide, then comment in the issue to discuss your approach with the maintainer. Once your proposed plan is accepted by the maintainer, create a pull request and submit your solution. Don’t be discouraged if you don’t get an immediate response. It will depend on the popularity of a package and whether maintaining it is part of a person’s “day job”.\nThe easiest way to look at issues is to browse all help wanted issues on the rOpenSci website.\nAlternatively, you can look at all open issues in rOpenSci with org:ropensci state:open https://github.com/search?q=org%3Aropensci++state%3Aopen&type=Issues\nTry narrowing down your search for open issues by searching for specific labels.\n\n\nhelp wanted (GitHub search terms org:ropensci label:\"help wanted\" state:open)\n\ngood first issue (GitHub search terms org:ropensci label:\"good first issue\" state:open)\n\ndocumentation (GitHub search terms org:ropensci label:\"documentation\" state:open)\n\nfeature (GitHub search terms org:ropensci label:\"feature\" state:open)\n\nYou can also combine labels in a search. For example, org:ropensci label:\"help wanted\" label:\"good first issue\" state:open\n\nRemember! Not all issues require coding!\n\n\n\n\n\nScreenshot of a Non-coding ‘help wanted’ issue called ‘Example use cases, tutorials, and applications’ from the tabulizer package repository on GitHub\n\n\n\n\nNon-Coding “help wanted” issue\n\n\n\n\nScreenshot of a Coding ‘help wanted’ issue called ‘Improve code coverage’ from the jsor package repository on GitHub\n\n\n\n\nCoding “help wanted” issue\nAre you a package author who wants to encourage people to help with issues in your project? Consider making your packages “contribution and collaboration friendly” by including a code of conduct and a contribution guide.\nSome good examples of contribution guides are this one from Peter Desmet, and this one from Noam Ross.\nYou can also label issues as suggested above. We keep track of newly labelled help wanted issues and post about them to help developers get help.\n\n3.10.1 How to contribute?\n\nFor package authors: Label your issues so people interested in contributing can find them. We recommend “help wanted” (no hyphen), “good first issue”, “beginner”\nFor package authors: Include future plans for your package in the README and open issues to address aspects of your plan.\n\nAddress a “Help wanted” issue. Take a look at the Help Wanted page. If you see one that interests you, take a look at the project’s contributing guide, then comment in the issue to discuss your approach with the author. Create a pull request and submit your solution!\n\nAddress any open issue. The majority of issues are not labelled “help wanted” but that doesn’t mean the author wouldn’t appreciate your help. Browse the issues in a package you use and see if there’s one you could address. This is a great way to get your favorite packages work the way you want them to!"
  },
  {
    "objectID": "resources.html#devguide",
    "href": "resources.html#devguide",
    "title": "3  rOpenSci Resources",
    "section": "\n3.11 Dev Guide: Development, maintenance, and peer review of rOpenSci packages",
    "text": "3.11 Dev Guide: Development, maintenance, and peer review of rOpenSci packages\n\n\n\n\n\nDev guide book cover in light blue showing assembly line chain of people handling packages in white\n\n\n\n\n\nOur online guide “rOpenSci Packages: Development, Maintenance, and Peer Review” a.k.a. the “Dev Guide”, is a resource for authors, maintainers, reviewers and editors of rOpenSci packages.\nrOpenSci has been running a software peer review system since 2015 to combine the best of academic peer review with software review. Having robust and reliable software tools is an important component of supporting open science and reproducible research. The Dev Guide was developed as a resource to help support and streamline these efforts and to promote best practices. It contains a huge amount of information including:\n\nStandards and best practices for building packages, such as creating and testing packages, continuous integration and security.\n\nThe peer review process, including policies and guides for authors and reviewers\n\nAre you wondering what it’s like to review a package for the first time, or how long it might take? Explore the Dev Guide sections on Why submit your package to rOpenSci? and Guide for Reviewers. Read blog posts with the “reviewer” tag. Many people review an R package before ever making one. Check out the list of past reviewers. Maybe you know one of them and can ask about their experience.\n\nAs a useR, you are qualified as a potential package reviewer if you have some appreciation for what makes your favourite packages useful. Miles McBain in “Where is the value in package peer review?”\n\nIf you’re interested in submitting a package for peer-review, read the Dev Guide section Why review packages for rOpenSci? or read blog posts with the “software-peer-review” tag to get the perspectives of authors whose packages have passed peer review as well as learn about the process itself.\nOnce you’ve submitted your package and an editor has assigned reviewers, you and the reviewers will be invited to join rOpenSci’s Slack workspace where you can connect more directly with members of the rOpenSci community, including other reviewers, package authors, users, and the rOpenSci staff and leadership team.\nWhen you submit your package for review, consider also publishing a journal article about your package. We have collaborative agreements with two journals. If you choose to submit an article to the Journal of Open Source Software (JOSS), it will be evaluated by JOSS based on the completed rOpenSci review. To submit to Methods in Ecology and Evolution, you can submit to a joint review process whereby your package is reviewed by rOpenSci, followed by a fast-tracked review of the manuscript by Methods in Ecology and Evolution.\nFinally, make sure your package is easily citable to get credit for all your hard work! Use the use_citation() function from the usethis package to add a CITATION file so users can use citation(\"yourpackage\") to easily find how to best cite your package. It’s also useful to add a section to your README letting users know how you’d like them to cite your package.\nSometimes an rOpenSci package maintainer finds that maintaining a package is no longer feasible for them. When that happens, we work hard to find new maintainers. If you think you might be interested, the Dev Guide Chapter on Changing Maintainers is a good place to start. If taking on a whole package seems like a bit much, check out our “Issues” section here to find specific issues you could help tackle in a package.\nFor the big picture, watch the video of Noam Ross’s useR! 2020 keynote, “Peer-Reviewing R Code: Where We’ve Been and Where We’re Going at rOpenSci”\nRead how our Dev Guide has been used in the wild in a manuscript review: When Standards Go Wild - Software Review for a Manuscript, and in the core curriculum of a Master of Data Science program: Using rOpenSci Software Peer Review Guidelines for Teaching.\n\n3.11.1 How to contribute\n\n\nLearn about reviewer guidelines. Read the Guide for Reviewers\n\n\nVolunteer to review a package. Fill out this form to get started. You’ll be contacted by an editor when a submitted package fits your profile. First-time reviewers are paired with more experienced reviewers and can request guidance from an editor.\n\nSubmit your package for peer review. Read the Guide for Authors and then submit a pre-submission inquiry to the GitHub repository where reviews take place to see if your package is in scope for rOpenSci.\n\nPublish a paper about your package. See above for our collaborations with the Journal of Open Source Software (JOSS) and Methods in Ecology and Evolution.\n\nAcknowledge your reviewers in your package DESCRIPTION (with their consent). Read about this in Thanking Your Reviewers: Gratitude through Semantic Metadata.\nAdd a CITATION file to ensure your package is easily citable\n\n\nRequest a co-maintainer for your package. Post a request in the #package-maintenance Slack channel.\n\nVolunteer to maintain a package. Check out the rOpenSci Newsletter, the last section is a “Call For Maintainers” and consists of a list of packages specifically looking for maintainers.\n\n\n\n\n\n\nR-Universe logo grey background with white text ‘rOpenSci R-universe’. The O in ‘Open’ is a ringed planet with moons"
  },
  {
    "objectID": "resources.html#runiverse",
    "href": "resources.html#runiverse",
    "title": "3  rOpenSci Resources",
    "section": "\n3.12 R-universe",
    "text": "3.12 R-universe\nrOpenSci’s R-universe is a new platform which launched in 2021 with the aim of improving publication and discovery of R research software.\nThe R-universe provides three main services.\n\nServing packages\n\n\nAnyone can set up a personal R-universe which can build and serve any package hosted on a public git server.\nPre-building packages simplifies installation of non-CRAN packages\nArticles are also rendered, providing a method for hosting non-software packages, such as research articles bundled as an R package.\n\n\nMonitoring software health and activity\n\n\nWhile still in early development, the goal is to have a system for monitoring software metrics to assess the role and impact of different software.\n\n\nDiscovery and recommendation\n\n\nThe R-universe front-end dashboard cross-links Universes, Maintainers, Articles and different software packages in an effort to increase visibility and help users find new R packages\nA future goal is to be able to offer recommendations to users\n\n\n3.12.1 How to contribute\n\n\nExplore the R-universe and share your findings with colleagues\n\nCreate your own R-universe. See instructions on the R-universe dashboard, or check out Jeroen Ooms’ blog post “How to create your personal CRAN-like repository on R-universe” or Yanina Bellini Saibene’s Spanish post “Creando Tu R-universe”\n\nRead/Contribute to the R-universe discussion\nReport a bug in the R-universe"
  },
  {
    "objectID": "resources.html#statsreview",
    "href": "resources.html#statsreview",
    "title": "3  rOpenSci Resources",
    "section": "\n3.13 Statistical Software Peer Review Book",
    "text": "3.13 Statistical Software Peer Review Book\nWe invite you to join us in developing new standards for peer-reviewed evaluation of statistical software Learn about this work in progress at rOpenSci Statistical Software Peer Review.\nUntil recently, rOpenSci’s software peer review program focused on R packages for reproducible data life cycle management To apply these processes to software implementing statistical methods and algorithms, we need new ways of evaluating and testing software, and of managing the review process, and to bring in new expert editors and reviewers This book serves as a home for collecting research and developing those standards, documenting not only our guidelines for statistical software but also the process of expanding the scope of review so the general processes of software review may be adapted and reproduced in other domains.\nThis work is supported by the Sloan Foundation and is organized under an R Consortium Working Group.\n\n3.13.1 How to contribute\n\n\nRead our in-progress book rOpenSci Statistical Software Peer Review to familiarize yourself with standards and processes under development\n\nFollow the discussion. Browse the dedicated area for discussion on the rOpenSci forum and share your comments or questions.\n\nMake a suggestion. We welcome contributions to the project either by filing suggestions as issues in the book’s GitHub repository, or by submitting a pull request.\n\nContact us directly (via Slack or our contact form) to inquire about submitting a statistical software package for pre-review."
  },
  {
    "objectID": "resources.html#contributing",
    "href": "resources.html#contributing",
    "title": "3  rOpenSci Resources",
    "section": "\n3.14 Contributing Guide",
    "text": "3.14 Contributing Guide\nThis book you’re reading right now is the rOpenSci Community Contributing Guide. Its purpose is to welcome you to rOpenSci and help you recognize yourself as a potential contributor. It will help you figure out what you might gain by giving your time, expertise, and experience, match your needs with things that will help rOpenSci’s mission, and connect you with resources to help you along the way.\nThis Guide is an evolving document and we want people to tell us what’s missing or what’s not clear.\n\n3.14.1 How to contribute\n\n\nSubmit a typo fix or clarification or tell us what’s missing. Open an issue in the GitHub repository for the Guide to discuss your idea.\n\nContribute something that isn’t addressed in the guide. Is there something you might like to contribute that isn’t addressed here? Open an issue in the GitHub repository for the Guide and/or tag our Community Manager, or ping them on Slack or via our contact form to discuss your idea."
  },
  {
    "objectID": "appendix.html",
    "href": "appendix.html",
    "title": "4  Bibliography",
    "section": "",
    "text": "How to Contribute to Open Source. Authors: https://github.com/github/opensource.guide#acknowledgments\nDan Sholler, Igor Steinmacher, Denae Ford, Mara Averick, Mike Hoye, Greg Wilson (2019). Ten simple rules for helping newcomers become contributors to open projects. PLoS Comput Biol, 15(9), e1007296. https://doi.org/10.1371/journal.pcbi.1007296\nTim O’Reilly (2004). Open Source Paradigm Shift\nThe Astropy Project. Contribute to Astropy\nJupyter Team. Jupyter Contributing guide\nRStudio. RStudio Education\nNadia Eghbal (2020) Working in Public: The Making and Maintenance of Open Source Software. Stripe Press, San Francisco, CA.\nMozilla Open Leadership Series. Contributor Personas & Pathways\nSoftware Carpentry. Carpentries Learner Profiles"
  },
  {
    "objectID": "bibliography.html",
    "href": "bibliography.html",
    "title": "5  Bibliography",
    "section": "",
    "text": "How to Contribute to Open Source. Authors: https://github.com/github/opensource.guide#acknowledgments\nDan Sholler, Igor Steinmacher, Denae Ford, Mara Averick, Mike Hoye, Greg Wilson (2019). Ten simple rules for helping newcomers become contributors to open projects. PLoS Comput Biol, 15(9), e1007296. https://doi.org/10.1371/journal.pcbi.1007296\nTim O’Reilly (2004). Open Source Paradigm Shift\nThe Astropy Project. Contribute to Astropy\nJupyter Team. Jupyter Contributing guide\nRStudio. RStudio Education\nNadia Eghbal (2020) Working in Public: The Making and Maintenance of Open Source Software. Stripe Press, San Francisco, CA.\nMozilla Open Leadership Series. Contributor Personas & Pathways\nSoftware Carpentry. Carpentries Learner Profiles"
  },
  {
    "objectID": "news.html",
    "href": "news.html",
    "title": "6  NEWS",
    "section": "",
    "text": "Removed Twitter channel references\nAdded Mastodon\nClarified coworking\nUpdate links to Newsletter"
  },
  {
    "objectID": "news.html#section-1",
    "href": "news.html#section-1",
    "title": "6  NEWS",
    "section": "6.2 0.2.0",
    "text": "6.2 0.2.0\n\nAdded NEWS chapter to appendix (#35)\nUpdate title on Zenodo (#45)\nFix back-button issues (#44)\nAdd cover and illustrator acknowledgement (#43)\nUpdate screenshots to match new rOpenSci website (#39)\nUpdate peer-review editor (#38)\nFix Twitter link (#28)\nMinor text re-wording (e.g., #34)\nSwitched to BS4 bookdown template\nAdded new resources: Help Wanted Page, Use Cases Page, R-universe, Social Co-working\nTweaked content\nUpdated staff and community manager information"
  },
  {
    "objectID": "news.html#section-2",
    "href": "news.html#section-2",
    "title": "6  NEWS",
    "section": "6.3 0.1.0 (2020-08-25)",
    "text": "6.3 0.1.0 (2020-08-25)\n\nInitial release 🎉"
  }
]